/* Generated by JSIL v0.8.2 build 34556. See http://jsil.org/ for more information. */ 
'use strict';
var $asm02 = JSIL.DeclareAssembly("ExaPhaser.WebForms, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("ExaPhaser");
JSIL.DeclareNamespace("ExaPhaser.WebForms");
/* class ExaPhaser.WebForms.Control */ 

(function Control$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.System.EventHandler)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.System.Delegate)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.System.Threading.Interlocked)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JqElement)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JQueryObject)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm04.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm02.ExaPhaser.WebForms.ControlCollection)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.System.EventArgs)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.System.Collections.ObjectModel.Collection$b1.Of($asm02.ExaPhaser.WebForms.Control))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.System.Int32)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm04.System.InvalidOperationException)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm04.System.Collections.Generic.IEnumerator$b1.Of($asm02.ExaPhaser.WebForms.Control))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm04.System.Collections.IEnumerator)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm04.System.IDisposable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("ExaPhaser.WebForms.ControlCollection"), [$asm02.TypeRef("ExaPhaser.WebForms.Control")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("System.InvalidOperationException"), [$asm04.TypeRef("System.String")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.TypeRef("ExaPhaser.WebForms.Control")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm04.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm04.System.Collections.Generic.IEnumerator$b1.Of($asm02.ExaPhaser.WebForms.Control).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm04.System.IDisposable.Dispose)) ();
  };


  function Control__ctor () {
    this.InitializeControl();
  }; 

  function Control_add_Loaded (value) {
    var eventHandler = this.Loaded;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T01().Combine(eventHandler2, value);
      eventHandler = $T02().CompareExchange$b1($T00())(/* ref */ new JSIL.MemberReference(this, "Loaded"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_DockControlInParentContainer () {
    this.Control$InternalJQElement$value.JqElement$JQueryObjectHandle$value._jqobject.css("width", "100%");
    this.Control$InternalJQElement$value.JqElement$JQueryObjectHandle$value._jqobject.css("height", "100%");
  }; 

  function Control_get_ContainerElement () {
    return this._container;
  }; 

  function Control_get_Controls () {
    return this._subControls;
  }; 

  function Control_get_Height () {
    return (((this.get_InternalElement()).get_Height()) | 0);
  }; 

  function Control_get_InternalElement () {
    return this._internalElement;
  }; 

  function Control_get_InternalJQElement () {
    return this.Control$InternalJQElement$value;
  }; 

  function Control_get_Left () {
    return this.Control$Left$value;
  }; 

  function Control_get_Margin () {
    return this.Control$Margin$value;
  }; 

  function Control_get_Parent () {
    return this._parent;
  }; 

  function Control_get_Top () {
    return this.Control$Top$value;
  }; 

  function Control_get_Width () {
    return (((this.get_InternalElement()).get_Width()) | 0);
  }; 

  function Control_InitializeControl () {
    this._subControls = $S00().Construct(this);
  }; 

  function Control_OnLoaded (e) {
    var loaded = this.Loaded;
    if (loaded !== null) {
      loaded(this, e);
    }
    this.UpdateContent();
  }; 

  function Control_PerformLayout () {
  }; 

  function Control_remove_Loaded (value) {
    var eventHandler = this.Loaded;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T01().Remove(eventHandler2, value);
      eventHandler = $T02().CompareExchange$b1($T00())(/* ref */ new JSIL.MemberReference(this, "Loaded"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Control_set_ContainerElement (value) {
    this.SetContainer(value);
  }; 

  function Control_set_Controls (value) {
    this.SetControls(value);
  }; 

  function Control_set_Height (value) {
    (this.get_InternalElement()).set_Height(+value);
  }; 

  function Control_set_InternalElement (value) {
    this.SetInternalElement(value);
  }; 

  function Control_set_InternalJQElement (value) {
    this.Control$InternalJQElement$value = value;
  }; 

  function Control_set_Left (value) {
    this.Control$Left$value = (value | 0);
  }; 

  function Control_set_Margin (value) {
    this.Control$Margin$value = (value | 0);
  }; 

  function Control_set_Parent (value) {
    this.SetParent(value);
  }; 

  function Control_set_Top (value) {
    this.Control$Top$value = (value | 0);
  }; 

  function Control_set_Width (value) {
    (this.get_InternalElement()).set_Width(+value);
  }; 

  function Control_SetContainer (value) {
    if (this._container === null) {
      this._container = value;
      this.OnLoaded($T08().Empty);
      return;
    }
    throw $S01().Construct("The control has already been added to a container.");
  }; 

  function Control_SetControls (value) {
    if (this._subControls.ControlCollection$ParentControl$value === null) {
      this._subControls.ControlCollection$ParentControl$value = this;
      var enumerator = value.GetEnumerator();
      try {

        while ($IM00().Call(enumerator, null)) {
          ($IM01().Call(enumerator, null)).set_Parent(this);
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
    enumerator = value.GetEnumerator();
    try {

      while ($IM00().Call(enumerator, null)) {
        var current = $IM01().Call(enumerator, null);
        $S02().CallVirtual("Add", null, this._subControls, current);
      }
    } finally {
      if (enumerator !== null) {
        $IM02().Call(enumerator, null);
      }
    }
  }; 

  function Control_SetInternalElement (value) {
    this._internalElement = value;
    this.Control$InternalJQElement$value = new ($T03())(this._internalElement);
  }; 

  function Control_SetParent (parentControl) {
    if (parentControl !== null) {
      this._parent = parentControl;
      this._subControls.ControlCollection$ParentControl$value = this._parent;
    }
  }; 

  function Control_UpdateContent () {
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.Control", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Control__ctor
    );

    $.Method({Static:false, Public:true }, "add_Loaded", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      Control_add_Loaded
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "DockControlInParentContainer", 
      JSIL.MethodSignature.Void, 
      Control_DockControlInParentContainer
    );

    $.Method({Static:false, Public:true }, "get_ContainerElement", 
      JSIL.MethodSignature.Return($asm05.TypeRef("SharpJS.Dom.Element")), 
      Control_get_ContainerElement
    );

    $.Method({Static:false, Public:true }, "get_Controls", 
      JSIL.MethodSignature.Return($asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type])), 
      Control_get_Controls
    );

    $.Method({Static:false, Public:true }, "get_Height", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_Height
    );

    $.Method({Static:false, Public:true }, "get_InternalElement", 
      JSIL.MethodSignature.Return($asm05.TypeRef("SharpJS.Dom.Element")), 
      Control_get_InternalElement
    );

    $.Method({Static:false, Public:true }, "get_InternalJQElement", 
      JSIL.MethodSignature.Return($asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement")), 
      Control_get_InternalJQElement
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Left", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_Left
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Margin", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_Margin
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Parent", 
      JSIL.MethodSignature.Return($.Type), 
      Control_get_Parent
    );

    $.Method({Static:false, Public:true }, "get_Top", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_Top
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_Width
    );

    $.Method({Static:false, Public:false}, "InitializeControl", 
      JSIL.MethodSignature.Void, 
      Control_InitializeControl
    );

    $.Method({Static:false, Public:false}, "OnLoaded", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventArgs")), 
      Control_OnLoaded
    );

    $.Method({Static:false, Public:true , Virtual:true }, "PerformLayout", 
      JSIL.MethodSignature.Void, 
      Control_PerformLayout
    );

    $.Method({Static:false, Public:true }, "remove_Loaded", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      Control_remove_Loaded
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ContainerElement", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.Element")), 
      Control_set_ContainerElement
    );

    $.Method({Static:false, Public:true }, "set_Controls", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type])), 
      Control_set_Controls
    );

    $.Method({Static:false, Public:true }, "set_Height", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_Height
    );

    $.Method({Static:false, Public:true }, "set_InternalElement", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.Element")), 
      Control_set_InternalElement
    );

    $.Method({Static:false, Public:false}, "set_InternalJQElement", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement")), 
      Control_set_InternalJQElement
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Left", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_Left
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Margin", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_Margin
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Parent", 
      JSIL.MethodSignature.Action($.Type), 
      Control_set_Parent
    );

    $.Method({Static:false, Public:true }, "set_Top", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_Top
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_Width
    );

    $.Method({Static:false, Public:false}, "SetContainer", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.Element")), 
      Control_SetContainer
    );

    $.Method({Static:false, Public:false}, "SetControls", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type])), 
      Control_SetControls
    );

    $.Method({Static:false, Public:false}, "SetInternalElement", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.Element")), 
      Control_SetInternalElement
    );

    $.Method({Static:false, Public:false}, "SetParent", 
      JSIL.MethodSignature.Action($.Type), 
      Control_SetParent
    );

    $.Method({Static:false, Public:true , Virtual:true }, "UpdateContent", 
      JSIL.MethodSignature.Void, 
      Control_UpdateContent
    );

    $.Field({Static:false, Public:false}, "Loaded", $asm04.TypeRef("System.EventHandler"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "_container", $asm05.TypeRef("SharpJS.Dom.Element"));

    $.Field({Static:false, Public:false}, "_internalElement", $asm05.TypeRef("SharpJS.Dom.Element"));

    $.Field({Static:false, Public:false}, "_parent", $.Type);

    $.Field({Static:false, Public:false}, "_subControls", $asm02.TypeRef("ExaPhaser.WebForms.ControlCollection"));

    $.Field({Static:false, Public:false}, "Control$InternalJQElement$value", $asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Control$Left$value", $.Int32)
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Control$Margin$value", $.Int32)
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Control$Top$value", $.Int32)
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ContainerElement", $asm05.TypeRef("SharpJS.Dom.Element"));

    $.Property({Static:false, Public:true }, "Controls", $asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$.Type]));

    $.Property({Static:false, Public:true }, "Height", $.Int32);

    $.Property({Static:false, Public:true }, "InternalElement", $asm05.TypeRef("SharpJS.Dom.Element"));

    $.Property({Static:false, Public:true }, "InternalJQElement", $asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement"));

    $.Property({Static:false, Public:true }, "Left", $.Int32);

    $.Property({Static:false, Public:true }, "Margin", $.Int32);

    $.Property({Static:false, Public:true }, "Parent", $.Type);

    $.Property({Static:false, Public:true }, "Top", $.Int32);

    $.Property({Static:false, Public:true }, "Width", $.Int32);

    $.Event({Static:false, Public:true }, "Loaded", $asm04.TypeRef("System.EventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.ControlCollection */ 

(function ControlCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.System.Collections.ObjectModel.Collection$b1.Of($asm02.ExaPhaser.WebForms.Control))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.System.Collections.Generic.List$b1.Of($asm02.ExaPhaser.WebForms.Control))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm04.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("ExaPhaser.WebForms.Control")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Int32"), $asm02.TypeRef("ExaPhaser.WebForms.Control")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm02.TypeRef("ExaPhaser.WebForms.Control"), [$asm04.TypeRef("System.Int32")]))) ();
  };


  function ControlCollection__ctor$00 (parentControl) {
    $T01().prototype._ctor.call(this);
    this.ControlCollection$ParentControl$value = parentControl;
    this._controls = $S00().Construct();
  }; 

  function ControlCollection__ctor$01 () {
    $thisType.prototype._ctor.call(this, null);
  }; 

  function ControlCollection_ClearItems () {
    $T01().prototype.ClearItems.call(this);
    (this._controls).Clear();
  }; 

  function ControlCollection_get_ParentControl () {
    return this.ControlCollection$ParentControl$value;
  }; 

  function ControlCollection_InsertItem$02 (index, control) {
    $S01().Call($T01().prototype, "InsertItem", null, this, index, control);
    if (control.get_Parent() === null) {
      control.set_Parent(this.ControlCollection$ParentControl$value);
    } else {
      control.set_ContainerElement((this.ControlCollection$ParentControl$value).get_InternalElement());
    }
    (this.ControlCollection$ParentControl$value).get_InternalElement()._element.appendChild(control.get_InternalElement()._element);
    (this._controls).Add(control);
  }; 

  function ControlCollection_RemoveItem (index) {
    var control = $S02().Call($T01().prototype, "get_Item", null, this, index);
    (this.ControlCollection$ParentControl$value).get_InternalElement()._element.removeChild(control.get_InternalElement()._element);
    (this._controls).Remove(control);
    $T01().prototype.RemoveItem.call(this, index);
  }; 

  function ControlCollection_set_ParentControl (value) {
    this.ControlCollection$ParentControl$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm02.TypeRef("ExaPhaser.WebForms.Control")]), 
      Name: "ExaPhaser.WebForms.ControlCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Control")), 
      ControlCollection__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ControlCollection__ctor$01
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ClearItems", 
      JSIL.MethodSignature.Void, 
      ControlCollection_ClearItems
    );

    $.Method({Static:false, Public:true }, "get_ParentControl", 
      JSIL.MethodSignature.Return($asm02.TypeRef("ExaPhaser.WebForms.Control")), 
      ControlCollection_get_ParentControl
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "InsertItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm02.TypeRef("ExaPhaser.WebForms.Control")]), 
      ControlCollection_InsertItem$02
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RemoveItem", 
      JSIL.MethodSignature.Action($.Int32), 
      ControlCollection_RemoveItem
    );

    $.Method({Static:false, Public:true }, "set_ParentControl", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Control")), 
      ControlCollection_set_ParentControl
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_controls", $asm04.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("ExaPhaser.WebForms.Control")]));

    $.Field({Static:false, Public:false}, "ControlCollection$ParentControl$value", $asm02.TypeRef("ExaPhaser.WebForms.Control"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "ParentControl", $asm02.TypeRef("ExaPhaser.WebForms.Control"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.DelegateCommand */ 

(function DelegateCommand$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.System.Action)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.System.Object)) ();
  };


  function DelegateCommand__ctor (executeAction) {
    this._executeAction = executeAction;
  }; 

  function DelegateCommand_Execute (o) {
    if (this._executeAction !== null) {
      this._executeAction();
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.DelegateCommand", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.Action")), 
      DelegateCommand__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Execute", 
      JSIL.MethodSignature.Action($.Object), 
      DelegateCommand_Execute
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_executeAction", $asm04.TypeRef("System.Action"));

    $.ImplementInterfaces(
      /* 0 */ $asm02.TypeRef("ExaPhaser.WebForms.ICommand")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.FontStyle */ 

(function FontStyle$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm05.SharpJS.Dom.Styles.FontWeight)) ();
  };


  function FontStyle__ctor () {
    this.FontStyle$FontSize$value = 16;
  }; 

  function FontStyle_get_FontSize () {
    return this.FontStyle$FontSize$value;
  }; 

  function FontStyle_get_FontWeight () {
    return this.FontStyle$FontWeight$value;
  }; 

  function FontStyle_set_FontSize (value) {
    this.FontStyle$FontSize$value = (value | 0);
  }; 

  function FontStyle_set_FontWeight (value) {
    this.FontStyle$FontWeight$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.FontStyle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FontStyle__ctor
    );

    $.Method({Static:false, Public:true }, "get_FontSize", 
      JSIL.MethodSignature.Return($.Int32), 
      FontStyle_get_FontSize
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_FontWeight", 
      JSIL.MethodSignature.Return($asm05.TypeRef("SharpJS.Dom.Styles.FontWeight")), 
      FontStyle_get_FontWeight
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FontSize", 
      JSIL.MethodSignature.Action($.Int32), 
      FontStyle_set_FontSize
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_FontWeight", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.Styles.FontWeight")), 
      FontStyle_set_FontWeight
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FontStyle$FontWeight$value", $asm05.TypeRef("SharpJS.Dom.Styles.FontWeight"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "FontStyle$FontSize$value", $.Int32)
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "FontWeight", $asm05.TypeRef("SharpJS.Dom.Styles.FontWeight"));

    $.Property({Static:false, Public:true }, "FontSize", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface ExaPhaser.WebForms.ICommand */ 

JSIL.MakeInterface(
  "ExaPhaser.WebForms.ICommand", true, [], function ($) {
    $.Method({}, "Execute", JSIL.MethodSignature.Action($.Object));
  }, []);

/* class ExaPhaser.WebForms.Layout */ 

(function Layout$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.System.Collections.ObjectModel.Collection$b1.Of($asm02.ExaPhaser.WebForms.Control))) ();
  };


  function Layout__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm02.TypeRef("ExaPhaser.WebForms.Control")]), 
      Name: "ExaPhaser.WebForms.Layout", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Layout__ctor
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.WebApplication */ 

(function WebApplication$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Themes.CSSUITheme)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.JSIL.RequiresJSILRuntimeException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JqElement)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JQElements.JqDivElement)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm02.ExaPhaser.WebForms.WebForm)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.System.String)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm05.SharpJS.Dom.Document)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement")))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.TypeRef("ExaPhaser.WebForms.WebForm"), $asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement")]))) ();
  };


  function WebApplication__ctor (theme) {
    if ((0) === null) {
      throw new ($T02())();
    }
    this.WebApplication$UITheme$value = theme;
    $thisType.WebApplication$CurrentTheme$value = this.WebApplication$UITheme$value;
  }; 

  function WebApplication_CreateApplication (applicationHostElement) {
    this.CreateFormHostElement(applicationHostElement);
  }; 

  function WebApplication_CreateFormHostElement (formHostParent) {
    var jqDivElement = new ($T04())();
    this._formHost = new ($T04())();
    $S00().CallVirtual("Append", null, jqDivElement, this._formHost);
    switch ((this.WebApplication$UITheme$value.CSSUITheme$Stylesheet$value).valueOf()) {
      case 0: 
        jqDivElement.AddClass("row");
        (this._formHost).AddClass("large-12");
        (this._formHost).AddClass("columns");
        break;

      case 3: 
        jqDivElement.AddClass("grid");
        (this._formHost).AddClass("centered grid__col--12");
        break;

      case 4: 
        jqDivElement.AddClass("wrap");
        break;

    }
    $S00().CallVirtual("Append", null, formHostParent, jqDivElement);
  }; 

  function WebApplication_get_CurrentTheme () {
    return $thisType.WebApplication$CurrentTheme$value;
  }; 

  function WebApplication_get_UITheme () {
    return this.WebApplication$UITheme$value;
  }; 

  function WebApplication_Run$00 (webForm, hostElementId) {
    $S01().CallVirtual("Run", null, this, webForm, new ($T03())($T07().GetElementById(hostElementId)));
  }; 

  function WebApplication_Run$01 (webForm, hostElement) {
    this.CreateApplication(hostElement);
    webForm.set_ContainerElement((this._formHost).get_DomRepresentation());
  }; 

  function WebApplication_set_CurrentTheme (value) {
    $thisType.WebApplication$CurrentTheme$value = value;
  }; 

  function WebApplication_set_UITheme (value) {
    this.WebApplication$UITheme$value = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.WebApplication", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication__ctor
    );

    $.Method({Static:false, Public:false}, "CreateApplication", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement")), 
      WebApplication_CreateApplication
    );

    $.Method({Static:false, Public:false}, "CreateFormHostElement", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement")), 
      WebApplication_CreateFormHostElement
    );

    $.Method({Static:true , Public:true }, "get_CurrentTheme", 
      JSIL.MethodSignature.Return($asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication_get_CurrentTheme
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_UITheme", 
      JSIL.MethodSignature.Return($asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication_get_UITheme
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Run", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("ExaPhaser.WebForms.WebForm"), $.String]), 
      WebApplication_Run$00
    );

    $.Method({Static:false, Public:true }, "Run", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("ExaPhaser.WebForms.WebForm"), $asm05.TypeRef("SharpJS.Dom.JSLibraries.JqElement")]), 
      WebApplication_Run$01
    );

    $.Method({Static:true , Public:false}, "set_CurrentTheme", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication_set_CurrentTheme
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_UITheme", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme")), 
      WebApplication_set_UITheme
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "_formHost", $asm05.TypeRef("SharpJS.Dom.JSLibraries.JQElements.JqDivElement"));

    $.Field({Static:false, Public:false}, "WebApplication$UITheme$value", $asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:true , Public:false}, "WebApplication$CurrentTheme$value", $asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "UITheme", $asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme"));

    $.Property({Static:true , Public:true }, "CurrentTheme", $asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSUITheme"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.WebForm */ 

(function WebForm$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.DivElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };


  function WebForm__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  function WebForm_UpdateContent () {
    $T00().prototype.UpdateContent.call(this);
    this.get_ContainerElement()._element.appendChild(this.get_InternalElement()._element);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.WebForm", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WebForm__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "UpdateContent", 
      JSIL.MethodSignature.Void, 
      WebForm_UpdateContent
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("ExaPhaser.WebForms.Themes");
/* enum ExaPhaser.WebForms.Themes.CSSFramework */ 

JSIL.MakeEnum(
  {
    FullName: "ExaPhaser.WebForms.Themes.CSSFramework", 
    BaseType: $asm04.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Foundation6: 0, 
    Bootstrap: 1, 
    Materialize: 2, 
    PolyUI: 3, 
    Kubism: 4, 
  }
);

/* class ExaPhaser.WebForms.Themes.CSSUITheme */ 

(function CSSUITheme$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Themes.CSSFramework)) ();
  };


  function CSSUITheme__ctor (stylesheet) {
    this.CSSUITheme$Stylesheet$value = stylesheet;
  }; 

  function CSSUITheme_get_Stylesheet () {
    return this.CSSUITheme$Stylesheet$value;
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Object"), 
      Name: "ExaPhaser.WebForms.Themes.CSSUITheme", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSFramework")), 
      CSSUITheme__ctor
    );

    $.Method({Static:false, Public:true }, "get_Stylesheet", 
      JSIL.MethodSignature.Return($asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSFramework")), 
      CSSUITheme_get_Stylesheet
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "CSSUITheme$Stylesheet$value", $asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSFramework"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Stylesheet", $asm02.TypeRef("ExaPhaser.WebForms.Themes.CSSFramework"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("ExaPhaser.WebForms.Controls");
/* class ExaPhaser.WebForms.Controls.TextControl */ 

(function TextControl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.ExaPhaser.WebForms.FontStyle)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.SharpJS.Dom.Styles.TextAlign)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JQuery)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JQueryObject)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm04.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.System.Object)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.System.Int32)) ();
  };


  function TextControl__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  function TextControl_set_FontStyle (value) {
    this.SetFontStyle(value);
  }; 

  function TextControl_set_TextAlign (value) {
    $T03().GetJQueryObject(this.get_InternalElement())._jqobject.css("text-align", value.toString().toLowerCase());
  }; 

  function TextControl_SetFontStyle (newFontStyle) {
    $T03().GetJQueryObject(this.get_InternalElement())._jqobject.css("font-size", JSIL.ConcatString($T07().$Box(newFontStyle.FontStyle$FontSize$value), "pt"));
    $T03().GetJQueryObject(this.get_InternalElement())._jqobject.css("font-weight", (newFontStyle.FontStyle$FontWeight$value).toString().toLowerCase());
    this._fontStyle = newFontStyle;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.TextControl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextControl__ctor
    );

    $.Method({Static:false, Public:true }, "set_FontStyle", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.FontStyle")), 
      TextControl_set_FontStyle
    );

    $.Method({Static:false, Public:true }, "set_TextAlign", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.Styles.TextAlign")), 
      TextControl_set_TextAlign
    );

    $.Method({Static:false, Public:false}, "SetFontStyle", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.FontStyle")), 
      TextControl_SetFontStyle
    );

    $.Field({Static:false, Public:false}, "_fontStyle", $asm02.TypeRef("ExaPhaser.WebForms.FontStyle"));

    $.Property({Static:false, Public:true }, "FontStyle", $asm02.TypeRef("ExaPhaser.WebForms.FontStyle"));

    $.Property({Static:false, Public:true }, "TextAlign", $asm05.TypeRef("SharpJS.Dom.Styles.TextAlign"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.Button */ 

(function Button$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Themes.CSSUITheme)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.ExaPhaser.WebForms.WebApplication)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.AnchorElement)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.System.EventHandler)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.System.Delegate)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.System.Threading.Interlocked)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.System.Object)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.System.EventArgs)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm02.ExaPhaser.WebForms.ICommand)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm04.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Object"), $asm04.TypeRef("System.EventArgs")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.ICommand.Execute)) ();
  };


  function Button__ctor () {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          $T00().prototype._ctor.call(this);
          switch ($T02().WebApplication$CurrentTheme$value.CSSUITheme$Stylesheet$value.valueOf()) {
            case 0: 
              var expr_33 = new ($T03())();
              expr_33.set_Class("button");
              this.set_InternalElement(expr_33);
              break $labelgroup0;

            case 3: 
              var expr_4B = new ($T03())();
              expr_4B.set_Class("btn--default");
              this.set_InternalElement(expr_4B);
              break $labelgroup0;

            case 4: 
              var expr_63 = new ($T03())();
              expr_63.set_Class("btn");
              this.set_InternalElement(expr_63);
              break $labelgroup0;

          }
          var expr_7B = new ($T03())();
          expr_7B.set_Class("button");
          this.set_InternalElement(expr_7B);
          break $labelgroup0;

      }
    }
    /* Original label IL_8B */ 
    (this.get_InternalElement()).add_Click($T06().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnClick", $S00(), false, false)));
    this.PerformLayout();
  }; 

  function Button_add_Click (value) {
    var eventHandler = this.Click;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T07().Combine(eventHandler2, value);
      eventHandler = $T08().CompareExchange$b1($T06())(/* ref */ new JSIL.MemberReference(this, "Click"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Button_get_Command () {
    return this.Button$Command$value;
  }; 

  function Button_get_CommandParameter () {
    return this.Button$CommandParameter$value;
  }; 

  function Button_get_Text () {
    return this._text;
  }; 

  function Button_OnClick (sender, e) {
    var expr_06 = this.Click;
    if (expr_06 !== null) {
      expr_06(this, e);
    }
    var expr_19 = this.Button$Command$value;
    if (expr_19 === null) {
      return;
    }
    $IM00().Call(expr_19, null, this.Button$CommandParameter$value);
  }; 

  function Button_remove_Click (value) {
    var eventHandler = this.Click;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T07().Remove(eventHandler2, value);
      eventHandler = $T08().CompareExchange$b1($T06())(/* ref */ new JSIL.MemberReference(this, "Click"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function Button_set_Command (value) {
    this.Button$Command$value = value;
  }; 

  function Button_set_CommandParameter (value) {
    this.Button$CommandParameter$value = value;
  }; 

  function Button_set_Text (value) {
    this.SetText(value);
  }; 

  function Button_SetText (value) {
    (this.get_InternalElement()).set_TextContent(value);
    this._text = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.Button", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Button__ctor
    );

    $.Method({Static:false, Public:true }, "add_Click", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      Button_add_Click
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Command", 
      JSIL.MethodSignature.Return($asm02.TypeRef("ExaPhaser.WebForms.ICommand")), 
      Button_get_Command
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_CommandParameter", 
      JSIL.MethodSignature.Return($.Object), 
      Button_get_CommandParameter
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      Button_get_Text
    );

    $.Method({Static:false, Public:false}, "OnClick", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("System.EventArgs")]), 
      Button_OnClick
    );

    $.Method({Static:false, Public:true }, "remove_Click", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      Button_remove_Click
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Command", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.ICommand")), 
      Button_set_Command
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CommandParameter", 
      JSIL.MethodSignature.Action($.Object), 
      Button_set_CommandParameter
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      Button_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      Button_SetText
    );

    $.Field({Static:false, Public:false}, "_text", $.String);

    $.Field({Static:false, Public:false}, "Click", $asm04.TypeRef("System.EventHandler"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Button$Command$value", $asm02.TypeRef("ExaPhaser.WebForms.ICommand"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Button$CommandParameter$value", $.Object)
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "Command", $asm02.TypeRef("ExaPhaser.WebForms.ICommand"));

    $.Property({Static:false, Public:true }, "CommandParameter", $.Object);

    $.Event({Static:false, Public:true }, "Click", $asm04.TypeRef("System.EventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.ElementGroup */ 

(function ElementGroup$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.System.Collections.ObjectModel.Collection$b1.Of($asm05.SharpJS.Dom.Element))) ();
  };


  function ElementGroup__ctor$00 (existingCollection) {
    $T00().prototype._ctor.call(this, existingCollection);
  }; 

  function ElementGroup__ctor$01 () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm05.TypeRef("SharpJS.Dom.Element")]), 
      Name: "ExaPhaser.WebForms.Controls.ElementGroup", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm05.TypeRef("SharpJS.Dom.Element")])), 
      ElementGroup__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ElementGroup__ctor$01
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.HtmlControl */ 

(function HtmlControl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.DivElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Controls.Internal.HtmlElementCollection)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Controls.ElementGroup)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm04.System.Collections.Generic.IEnumerator$b1.Of($asm05.SharpJS.Dom.Element))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm04.System.Collections.ObjectModel.Collection$b1.Of($asm05.SharpJS.Dom.Element))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.System.Collections.IEnumerator)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.System.IDisposable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup"), [$asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm05.TypeRef("SharpJS.Dom.Element")])]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm05.TypeRef("SharpJS.Dom.Element")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm04.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm04.System.Collections.Generic.IEnumerator$b1.Of($asm05.SharpJS.Dom.Element).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm04.System.IDisposable.Dispose)) ();
  };


  function HtmlControl__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this._elements = new ($T02())(this.get_InternalElement());
    this.PerformLayout();
  }; 

  function HtmlControl_get_Elements () {
    return $S00().Construct(this._elements);
  }; 

  function HtmlControl_set_Elements (value) {
    this.SetElements(value);
  }; 

  function HtmlControl_SetElements (newElements) {
    var enumerator = newElements.GetEnumerator();
    try {

      while ($IM00().Call(enumerator, null)) {
        var current = $IM01().Call(enumerator, null);
        $S01().CallVirtual("Add", null, this._elements, current);
      }
    } finally {
      if (enumerator !== null) {
        $IM02().Call(enumerator, null);
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.HtmlControl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      HtmlControl__ctor
    );

    $.Method({Static:false, Public:true }, "get_Elements", 
      JSIL.MethodSignature.Return($asm02.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup")), 
      HtmlControl_get_Elements
    );

    $.Method({Static:false, Public:true }, "set_Elements", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup")), 
      HtmlControl_set_Elements
    );

    $.Method({Static:false, Public:false}, "SetElements", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup")), 
      HtmlControl_SetElements
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_elements", $asm02.TypeRef("ExaPhaser.WebForms.Controls.Internal.HtmlElementCollection"));

    $.Property({Static:false, Public:true }, "Elements", $asm02.TypeRef("ExaPhaser.WebForms.Controls.ElementGroup"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.ImageView */ 

(function ImageView$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.ImageElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };


  function ImageView__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  function ImageView_get_SourceURI () {
    return this._sourceURI;
  }; 

  function ImageView_set_SourceURI (value) {
    this.SetImageSource(value);
  }; 

  function ImageView_SetImageSource (sourceURI) {
    (this.get_InternalElement()).set_Item("src", sourceURI);
    this._sourceURI = sourceURI;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.ImageView", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ImageView__ctor
    );

    $.Method({Static:false, Public:true }, "get_SourceURI", 
      JSIL.MethodSignature.Return($.String), 
      ImageView_get_SourceURI
    );

    $.Method({Static:false, Public:true }, "set_SourceURI", 
      JSIL.MethodSignature.Action($.String), 
      ImageView_set_SourceURI
    );

    $.Method({Static:false, Public:false}, "SetImageSource", 
      JSIL.MethodSignature.Action($.String), 
      ImageView_SetImageSource
    );

    $.Field({Static:false, Public:false}, "_sourceURI", $.String);

    $.Property({Static:false, Public:true }, "SourceURI", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum ExaPhaser.WebForms.Controls.InputType */ 

JSIL.MakeEnum(
  {
    FullName: "ExaPhaser.WebForms.Controls.InputType", 
    BaseType: $asm04.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Text: 0, 
    Password: 1, 
    Email: 2, 
    Number: 3, 
    Search: 4, 
  }
);

/* class ExaPhaser.WebForms.Controls.LinkLabel */ 

(function LinkLabel$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.AnchorElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm04.System.String)) ();
  };


  function LinkLabel__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T02())());
    this.PerformLayout();
  }; 

  function LinkLabel_get_LinkLocation () {
    return (this.get_InternalElement()).get_Item("href");
  }; 

  function LinkLabel_get_Text () {
    return this._text;
  }; 

  function LinkLabel_set_LinkLocation (value) {
    (this.get_InternalElement()).set_Item("href", value);
  }; 

  function LinkLabel_set_Text (value) {
    this.SetText(value);
  }; 

  function LinkLabel_SetText (value) {
    (this.get_InternalElement()).set_TextContent(value);
    this._text = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.LinkLabel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      LinkLabel__ctor
    );

    $.Method({Static:false, Public:true }, "get_LinkLocation", 
      JSIL.MethodSignature.Return($.String), 
      LinkLabel_get_LinkLocation
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      LinkLabel_get_Text
    );

    $.Method({Static:false, Public:true }, "set_LinkLocation", 
      JSIL.MethodSignature.Action($.String), 
      LinkLabel_set_LinkLocation
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      LinkLabel_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      LinkLabel_SetText
    );

    $.Field({Static:false, Public:false}, "_text", $.String);

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "LinkLocation", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.PreformattedTextBlock */ 

(function PreformattedTextBlock$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.PreformattedElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };


  function PreformattedTextBlock__ctor () {
    this._text = "";
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  function PreformattedTextBlock_get_Text () {
    return this._text;
  }; 

  function PreformattedTextBlock_set_Text (value) {
    this.SetText(value);
  }; 

  function PreformattedTextBlock_SetText (value) {
    (this.get_InternalElement()).set_TextContent(value);
    this._text = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.PreformattedTextBlock", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      PreformattedTextBlock__ctor
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      PreformattedTextBlock_get_Text
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      PreformattedTextBlock_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      PreformattedTextBlock_SetText
    );

    $.Field({Static:false, Public:false}, "_text", $.String);

    $.Property({Static:false, Public:true }, "Text", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.TextArea */ 

(function TextArea$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.TextAreaElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm04.System.EventHandler)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JqElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.System.Delegate)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.System.Threading.Interlocked)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.System.Int32)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.System.Object)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.System.EventArgs)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm04.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Object"), $asm04.TypeRef("System.EventArgs")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Object"), $asm04.TypeRef("System.EventArgs")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Object"), $asm04.TypeRef("System.EventArgs")]))) ();
  };


  function TextArea__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T02())());
    (this.get_InternalElement()).add_Change($T04().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnTextChanged", $S00(), false, false)));
    (this.Control$InternalJQElement$value).add_EnterKeyPressed($T04().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnEnterPressed", $S01(), false, false)));
    (this.Control$InternalJQElement$value).add_Focus($T04().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnFocus", $S02(), false, false)));
    this.PerformLayout();
  }; 

  function TextArea_add_EnterPressed (value) {
    var eventHandler = this.EnterPressed;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Combine(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "EnterPressed"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_add_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Combine(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_add_TextChanged (value) {
    var eventHandler = this.TextChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Combine(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "TextChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_get_Columns () {
    return $T08().Parse((this.get_InternalElement()).get_Item("cols"));
  }; 

  function TextArea_get_Rows () {
    return $T08().Parse((this.get_InternalElement()).get_Item("rows"));
  }; 

  function TextArea_get_Text () {
    return this.GetText();
  }; 

  function TextArea_GetText () {
    return (this.get_InternalElement()).get_Item("value");
  }; 

  function TextArea_OnEnterPressed (sender, e) {
    var enterPressed = this.EnterPressed;
    if (enterPressed !== null) {
      enterPressed(this, e);
    }
  }; 

  function TextArea_OnFocus (sender, e) {
    var focus = this.Focus;
    if (focus !== null) {
      focus(this, e);
    }
  }; 

  function TextArea_OnTextChanged (sender, e) {
    var textChanged = this.TextChanged;
    if (textChanged !== null) {
      textChanged(this, e);
    }
  }; 

  function TextArea_remove_EnterPressed (value) {
    var eventHandler = this.EnterPressed;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Remove(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "EnterPressed"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_remove_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Remove(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_remove_TextChanged (value) {
    var eventHandler = this.TextChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Remove(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "TextChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextArea_set_Columns (value) {
    (this.get_InternalElement()).set_Item("cols", (value).toString());
  }; 

  function TextArea_set_Rows (value) {
    (this.get_InternalElement()).set_Item("rows", (value).toString());
  }; 

  function TextArea_set_Text (value) {
    this.SetText(value);
  }; 

  function TextArea_SetText (value) {
    (this.get_InternalElement()).set_Item("value", value);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.TextArea", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextArea__ctor
    );

    $.Method({Static:false, Public:true }, "add_EnterPressed", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextArea_add_EnterPressed
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_Focus", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextArea_add_Focus
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_TextChanged", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextArea_add_TextChanged
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Columns", 
      JSIL.MethodSignature.Return($.Int32), 
      TextArea_get_Columns
    );

    $.Method({Static:false, Public:true }, "get_Rows", 
      JSIL.MethodSignature.Return($.Int32), 
      TextArea_get_Rows
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      TextArea_get_Text
    );

    $.Method({Static:false, Public:false}, "GetText", 
      JSIL.MethodSignature.Return($.String), 
      TextArea_GetText
    );

    $.Method({Static:false, Public:false}, "OnEnterPressed", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("System.EventArgs")]), 
      TextArea_OnEnterPressed
    );

    $.Method({Static:false, Public:false}, "OnFocus", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("System.EventArgs")]), 
      TextArea_OnFocus
    );

    $.Method({Static:false, Public:false}, "OnTextChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("System.EventArgs")]), 
      TextArea_OnTextChanged
    );

    $.Method({Static:false, Public:true }, "remove_EnterPressed", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextArea_remove_EnterPressed
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_Focus", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextArea_remove_Focus
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_TextChanged", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextArea_remove_TextChanged
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Columns", 
      JSIL.MethodSignature.Action($.Int32), 
      TextArea_set_Columns
    );

    $.Method({Static:false, Public:true }, "set_Rows", 
      JSIL.MethodSignature.Action($.Int32), 
      TextArea_set_Rows
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      TextArea_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      TextArea_SetText
    );

    $.Field({Static:false, Public:false}, "EnterPressed", $asm04.TypeRef("System.EventHandler"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Focus", $asm04.TypeRef("System.EventHandler"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextChanged", $asm04.TypeRef("System.EventHandler"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "Rows", $.Int32);

    $.Property({Static:false, Public:true }, "Columns", $.Int32);

    $.Event({Static:false, Public:true }, "EnterPressed", $asm04.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "Focus", $asm04.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "TextChanged", $asm04.TypeRef("System.EventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.TextBlock */ 

(function TextBlock$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.ParagraphElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm04.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };


  function TextBlock__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T02())());
    this.PerformLayout();
  }; 

  function TextBlock_get_Text () {
    return this._text;
  }; 

  function TextBlock_set_Text (value) {
    this.SetText(value);
  }; 

  function TextBlock_SetText (value) {
    (this.get_InternalElement()).set_TextContent(value);
    this._text = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.TextBlock", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextBlock__ctor
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      TextBlock_get_Text
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      TextBlock_set_Text
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      TextBlock_SetText
    );

    $.Field({Static:false, Public:false}, "_text", $.String);

    $.Property({Static:false, Public:true }, "Text", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.TextBox */ 

(function TextBox$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Controls.TextControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.InputElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm04.System.EventHandler)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JqElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.System.Delegate)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.System.Threading.Interlocked)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Controls.InputType)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.System.Object)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm04.System.EventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Object"), $asm04.TypeRef("System.EventArgs")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Object"), $asm04.TypeRef("System.EventArgs")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Object"), $asm04.TypeRef("System.EventArgs")]))) ();
  };


  function TextBox__ctor () {
    $T00().prototype._ctor.call(this);
    var expr_0C = new ($T01())();
    expr_0C.set_Type("text");
    this.set_InternalElement(expr_0C);
    (this.get_InternalElement()).add_Change($T04().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnTextChanged", $S00(), false, false)));
    (this.Control$InternalJQElement$value).add_EnterKeyPressed($T04().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnEnterPressed", $S01(), false, false)));
    (this.Control$InternalJQElement$value).add_Focus($T04().New(this, null, new JSIL.MethodPointerInfo($thisType, "OnFocus", $S02(), false, false)));
    this.PerformLayout();
  }; 

  function TextBox_add_EnterPressed (value) {
    var eventHandler = this.EnterPressed;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Combine(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "EnterPressed"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_add_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Combine(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_add_TextChanged (value) {
    var eventHandler = this.TextChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Combine(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "TextChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_get_Text () {
    return this.GetText();
  }; 

  function TextBox_get_TextInputType () {
    return this.GetInputType();
  }; 

  function TextBox_GetInputType () {
    var a = (this.get_InternalElement()).get_Item("type");
    if (a == "text") {
      return $T09().Text;
    }
    if (a == "password") {
      return $T09().Password;
    }
    if (a == "email") {
      return $T09().Email;
    }
    if (a == "number") {
      return $T09().Number;
    }
    if (!(a == "search")) {
      return $T09().Text;
    }
    return $T09().Search;
  }; 

  function TextBox_GetText () {
    return (this.get_InternalElement()).get_Item("value");
  }; 

  function TextBox_OnEnterPressed (sender, e) {
    var enterPressed = this.EnterPressed;
    if (enterPressed !== null) {
      enterPressed(this, e);
    }
  }; 

  function TextBox_OnFocus (sender, e) {
    var focus = this.Focus;
    if (focus !== null) {
      focus(this, e);
    }
  }; 

  function TextBox_OnTextChanged (sender, e) {
    var textChanged = this.TextChanged;
    if (textChanged !== null) {
      textChanged(this, e);
    }
  }; 

  function TextBox_remove_EnterPressed (value) {
    var eventHandler = this.EnterPressed;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Remove(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "EnterPressed"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_remove_Focus (value) {
    var eventHandler = this.Focus;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Remove(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "Focus"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_remove_TextChanged (value) {
    var eventHandler = this.TextChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06().Remove(eventHandler2, value);
      eventHandler = $T07().CompareExchange$b1($T04())(/* ref */ new JSIL.MemberReference(this, "TextChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  }; 

  function TextBox_set_Text (value) {
    this.SetText(value);
  }; 

  function TextBox_set_TextInputType (value) {
    this.SetInputType(value);
  }; 

  function TextBox_SetInputType (value) {
    switch (value.valueOf()) {
      case 0: 
        (this.get_InternalElement()).set_Item("type", "text");
        return;

      case 1: 
        (this.get_InternalElement()).set_Item("type", "password");
        return;

      case 2: 
        (this.get_InternalElement()).set_Item("type", "email");
        return;

      case 3: 
        (this.get_InternalElement()).set_Item("type", "number");
        return;

      case 4: 
        (this.get_InternalElement()).set_Item("type", "search");
        return;

      default: 
        return;

    }
  }; 

  function TextBox_SetText (value) {
    (this.get_InternalElement()).set_Item("value", value);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Controls.TextControl"), 
      Name: "ExaPhaser.WebForms.Controls.TextBox", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextBox__ctor
    );

    $.Method({Static:false, Public:true }, "add_EnterPressed", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextBox_add_EnterPressed
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_Focus", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextBox_add_Focus
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_TextChanged", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextBox_add_TextChanged
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      TextBox_get_Text
    );

    $.Method({Static:false, Public:true }, "get_TextInputType", 
      JSIL.MethodSignature.Return($asm02.TypeRef("ExaPhaser.WebForms.Controls.InputType")), 
      TextBox_get_TextInputType
    );

    $.Method({Static:false, Public:false}, "GetInputType", 
      JSIL.MethodSignature.Return($asm02.TypeRef("ExaPhaser.WebForms.Controls.InputType")), 
      TextBox_GetInputType
    );

    $.Method({Static:false, Public:false}, "GetText", 
      JSIL.MethodSignature.Return($.String), 
      TextBox_GetText
    );

    $.Method({Static:false, Public:false}, "OnEnterPressed", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("System.EventArgs")]), 
      TextBox_OnEnterPressed
    );

    $.Method({Static:false, Public:false}, "OnFocus", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("System.EventArgs")]), 
      TextBox_OnFocus
    );

    $.Method({Static:false, Public:false}, "OnTextChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("System.EventArgs")]), 
      TextBox_OnTextChanged
    );

    $.Method({Static:false, Public:true }, "remove_EnterPressed", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextBox_remove_EnterPressed
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_Focus", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextBox_remove_Focus
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "remove_TextChanged", 
      JSIL.MethodSignature.Action($asm04.TypeRef("System.EventHandler")), 
      TextBox_remove_TextChanged
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      TextBox_set_Text
    );

    $.Method({Static:false, Public:true }, "set_TextInputType", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Controls.InputType")), 
      TextBox_set_TextInputType
    );

    $.Method({Static:false, Public:false}, "SetInputType", 
      JSIL.MethodSignature.Action($asm02.TypeRef("ExaPhaser.WebForms.Controls.InputType")), 
      TextBox_SetInputType
    );

    $.Method({Static:false, Public:false}, "SetText", 
      JSIL.MethodSignature.Action($.String), 
      TextBox_SetText
    );

    $.Field({Static:false, Public:false}, "EnterPressed", $asm04.TypeRef("System.EventHandler"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "Focus", $asm04.TypeRef("System.EventHandler"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "TextChanged", $asm04.TypeRef("System.EventHandler"))
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "TextInputType", $asm02.TypeRef("ExaPhaser.WebForms.Controls.InputType"));

    $.Event({Static:false, Public:true }, "EnterPressed", $asm04.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "Focus", $asm04.TypeRef("System.EventHandler"));

    $.Event({Static:false, Public:true }, "TextChanged", $asm04.TypeRef("System.EventHandler"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ExaPhaser.WebForms.Controls.WebView */ 

(function WebView$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.ExaPhaser.WebForms.Control)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm05.SharpJS.Dom.Elements.IFrameElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.SharpJS.Dom.JSLibraries.JqElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm04.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };


  function WebView__ctor () {
    $T00().prototype._ctor.call(this);
    this.set_InternalElement(new ($T01())());
    this.PerformLayout();
  }; 

  function WebView_get_DocumentSource () {
    return (this.Control$InternalJQElement$value).Html();
  }; 

  function WebView_get_SourceURI () {
    return this._sourceURI;
  }; 

  function WebView_LoadHTML (html) {
    this.InternalJQElement.Contents().find('html').html(html);
    this._sourceURI = null;
  }; 

  function WebView_LoadURI (uri) {
    (this.get_InternalElement()).set_Item("src", uri);
    this._sourceURI = uri;
  }; 

  function WebView_set_DocumentSource (value) {
    this.LoadHTML(value);
  }; 

  function WebView_set_SourceURI (value) {
    this.LoadURI(value);
  }; 

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("ExaPhaser.WebForms.Control"), 
      Name: "ExaPhaser.WebForms.Controls.WebView", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WebView__ctor
    );

    $.Method({Static:false, Public:true }, "get_DocumentSource", 
      JSIL.MethodSignature.Return($.String), 
      WebView_get_DocumentSource
    );

    $.Method({Static:false, Public:true }, "get_SourceURI", 
      JSIL.MethodSignature.Return($.String), 
      WebView_get_SourceURI
    );

    $.Method({Static:false, Public:true }, "LoadHTML", 
      JSIL.MethodSignature.Action($.String), 
      WebView_LoadHTML
    );

    $.Method({Static:false, Public:true }, "LoadURI", 
      JSIL.MethodSignature.Action($.String), 
      WebView_LoadURI
    );

    $.Method({Static:false, Public:true }, "set_DocumentSource", 
      JSIL.MethodSignature.Action($.String), 
      WebView_set_DocumentSource
    );

    $.Method({Static:false, Public:true }, "set_SourceURI", 
      JSIL.MethodSignature.Action($.String), 
      WebView_set_SourceURI
    );

    $.Field({Static:false, Public:false}, "_sourceURI", $.String);

    $.Property({Static:false, Public:true }, "DocumentSource", $.String);

    $.Property({Static:false, Public:true }, "SourceURI", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("ExaPhaser.WebForms.Controls.Internal");
/* class ExaPhaser.WebForms.Controls.Internal.HtmlElementCollection */ 

(function HtmlElementCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm05.SharpJS.Dom.Element)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.System.Collections.ObjectModel.Collection$b1.Of($asm05.SharpJS.Dom.Element))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("System.Int32"), $asm05.TypeRef("SharpJS.Dom.Element")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("SharpJS.Dom.Element"), [$asm04.TypeRef("System.Int32")]))) ();
  };


  function HtmlElementCollection__ctor (parentElement) {
    $T01().prototype._ctor.call(this);
    this._parentElement = parentElement;
  }; 

  function HtmlElementCollection_InsertItem$00 (index, item) {
    $S00().Call($T01().prototype, "InsertItem", null, this, index, item);
    this._parentElement._element.appendChild(item._element);
  }; 

  function HtmlElementCollection_RemoveItem (index) {
    var child = $S01().Call($T01().prototype, "get_Item", null, this, index);
    this._parentElement._element.removeChild(child._element);
    $T01().prototype.RemoveItem.call(this, index);
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.Collections.ObjectModel.Collection`1", [$asm05.TypeRef("SharpJS.Dom.Element")]), 
      Name: "ExaPhaser.WebForms.Controls.Internal.HtmlElementCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm05.TypeRef("SharpJS.Dom.Element")), 
      HtmlElementCollection__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InsertItem", 
      new JSIL.MethodSignature(null, [$.Int32, $asm05.TypeRef("SharpJS.Dom.Element")]), 
      HtmlElementCollection_InsertItem$00
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RemoveItem", 
      JSIL.MethodSignature.Action($.Int32), 
      HtmlElementCollection_RemoveItem
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_parentElement", $asm05.TypeRef("SharpJS.Dom.Element"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

